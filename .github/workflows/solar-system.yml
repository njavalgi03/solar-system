name: Solar System Workflow
on:
    push:
    workflow_dispatch:

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_PASSWORD: SuperPassword
    MONGO_USERNAME: superuser

jobs:
    unit-testing:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
         
          - name: Setup NodeJS Version - 18
            uses: actions/setup-node@v3
            with:
                node-version: 18
         
          - name: Install Dependencies
            run: npm install
          
          - name: Unit Testing
            run: npm test

          - name: Archive Report
            uses: actions/upload-artifact@v4
            with:
                name: Mocha-Test-Result
                path: test-results.xml

    code-coverage:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
         
          - name: Setup NodeJS Version - 18
            uses: actions/setup-node@v3
            with:
                node-version: 18
         
          - name: Install Dependencies
            run: npm install
          
          - name: Code Coverage
            continue-on-error: true
            run: npm run coverage

          - name: Archive Report
            uses: actions/upload-artifact@v4
            with:
                name: Code-Coverage-Results
                path: coverage
    docker:
      name: Run Docker
      runs-on: ubuntu-latest
      needs: [unit-testing,code-coverage]
      permissions:
        packages: write
      steps:

          - name: Checkout
            uses: actions/checkout@v4

          - name: GHCR Login
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{github.repository_owner}}
              password: ${{secrets.GITHUB_TOKEN}}

          - name: GHCR Push
            uses: docker/build-push-action@v4
            with:
              context: .
              push: true
              tags: ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: start minikube
            id: minikube
            uses: medyagh/setup-minikube@latest

          - name: Install Kubernetes
            uses: azure/setup-kubectl@v4
            with:
                version: 'v1.26.0'

          - name: Fetch IP
            run: 
              kubectl -n ingress-nginx get services ingress-nginx-controller
            
          - name: Fetch Ingress IP
            run: |
             echo "INGRESS_IP={kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}" >> $GITHUB_ENV

          - uses: cschleiden/replace-tokens@v1
            with:
              tokenPrefix: '_{_'
              tokenSuffix: '_}_'
              files: 'kubernetes\development\*.yml'
            env:
              NAMESPACE: ${{vars.NAMESPACE}}
              REPLICAS: ${{vars.REPLICAS}}
              IMAGE: ${{vars.DOCKER_USER}}/solar-system:${{github.sha}}
              INGRESS_IP: ${{env.INGRESS_IP}}

          - name: Fetch Kuberentes Cluster Details
            run: |
             kubectl version --short
             echo ----------------------
             kubectl get nodes